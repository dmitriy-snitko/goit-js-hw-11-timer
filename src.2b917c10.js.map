{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","Date","refs","days","document","querySelector","hours","mins","secs","time","pad","Math","floor","textContent","value","String","padStart","updateClocke","calculateWaitingTime","setInterval","start"],"mappings":";;;AA6CA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7CA,QAAA,oBAEMA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,EAAUC,GAAY,EAAA,KAAA,GAC3BD,KAAAA,SAAWA,EACXC,KAAAA,WAAa,IAAIC,KAAQD,GAAAA,OAAAA,IACzBE,KAAAA,KAAO,CACVC,KAAMC,SAASC,cAAkBN,IAAAA,OAAAA,EADvB,6BAEVO,MAAOF,SAASC,cAAkBN,IAAAA,OAAAA,EAFxB,8BAGVQ,KAAMH,SAASC,cAAkBN,IAAAA,OAAAA,EAHvB,6BAIVS,KAAMJ,SAASC,cAAkBN,IAAAA,OAAAA,EAA3B,8BAmCZ,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,uBA/BE,MAAA,WACQU,IAAAA,EAAO,KAAKT,WAAa,IAAIC,KAO5B,MAAA,CAAEE,KALI,KAAKO,IAAIC,KAAKC,MAAMH,EAAQ,QAK1BH,MAJD,KAAKI,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAI9CF,KAHT,KAAKG,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGlCD,KAFf,KAAKE,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,SAyB5D,CAAA,IAAA,eApBE,MAAA,SAA0C,GAA3BN,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3BN,KAAAA,KAAKC,KAAKU,YAAiBV,GAAAA,OAAAA,GAC3BD,KAAAA,KAAKI,MAAMO,YAAiBP,GAAAA,OAAAA,GAC5BJ,KAAAA,KAAKK,KAAKM,YAAiBN,GAAAA,OAAAA,GAC3BL,KAAAA,KAAKM,KAAKK,YAAiBL,GAAAA,OAAAA,KAgBpC,CAAA,IAAA,MAbE,MAAA,SAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAYrC,CAAA,IAAA,QATE,MAAA,WAAQ,IAAA,EAAA,KACCC,KAAAA,aAAa,KAAKC,wBACzBC,YAAY,WACV,EAAKF,aAAa,EAAKC,yBACtB,SAKP,EA3CMpB,GA0CAW,EAAO,IAAIX,EAAe,UAAW,eAC3CW,EAAKW","file":"src.2b917c10.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor(selector, targetDate) {\n    this.selector = selector;\n    this.targetDate = new Date(`${targetDate}`);\n    this.refs = {\n      days: document.querySelector(`#${selector} span[data-value = days]`),\n      hours: document.querySelector(`#${selector} span[data-value = hours]`),\n      mins: document.querySelector(`#${selector} span[data-value = mins]`),\n      secs: document.querySelector(`#${selector} span[data-value = secs]`),\n    };\n  };\n\n  calculateWaitingTime() {\n    const time = this.targetDate - new Date();\n\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n    return { days, hours, mins, secs };\n  };\n\n  updateClocke({ days, hours, mins, secs }) {\n    this.refs.days.textContent = `${days}`;\n    this.refs.hours.textContent = `${hours}`;\n    this.refs.mins.textContent = `${mins}`;\n    this.refs.secs.textContent = `${secs}`;\n  };\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  start() {\n      this.updateClocke(this.calculateWaitingTime());\n    setInterval(() => {\n      this.updateClocke(this.calculateWaitingTime());\n    }, 1000);\n  }\n};\n\nconst time = new CountdownTimer('timer-1', '2021, 5, 15');\ntime.start();\n"]}